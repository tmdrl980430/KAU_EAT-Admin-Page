{"version":3,"file":"static/js/304.0af26f0a.chunk.js","mappings":"+NAkJA,UArIe,WACb,OACE,UAAC,KAAI,YACH,SAAC,KAAI,CAACA,GAAI,GAAG,UACX,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,SAAC,KAAW,WACV,+CAEF,UAAC,KAAS,YACR,eAAGA,UAAU,6BAA4B,iIAET,yCAAyB,gBAAY,oCAAmB,IAAG,iBAC5E,sCAAoB,mCAAiC,KAClE,cAAGC,KAAK,+DAA8D,6BAElE,QAGN,UAAC,KAAW,CAACA,KAAK,mBAAkB,WAClC,SAAC,KAAM,CAACC,MAAM,UAAS,wDACvB,SAAC,KAAM,CAACA,MAAM,YAAW,0DACzB,SAAC,KAAM,CAACA,MAAM,UAAS,wDACvB,SAAC,KAAM,CAACA,MAAM,SAAQ,uDACtB,SAAC,KAAM,CAACA,MAAM,UAAS,wDACvB,SAAC,KAAM,CAACA,MAAM,OAAM,qDACpB,SAAC,KAAM,CAACA,MAAM,QAAO,sDACrB,SAAC,KAAM,CAACA,MAAM,OAAM,gEAK5B,SAAC,KAAI,CAACH,GAAI,GAAG,UACX,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,UAAC,KAAW,YACV,4CAA4B,KAAC,8CAE/B,UAAC,KAAS,YACR,eAAGA,UAAU,6BAA4B,sBAC/B,2CAA+B,8EAGzC,UAAC,KAAW,CAACC,KAAK,8BAA6B,WAC7C,UAAC,KAAM,CAACC,MAAM,UAAS,0CACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG/E,UAAC,KAAM,CAACC,MAAM,YAAW,4CACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAGjF,UAAC,KAAM,CAACC,MAAM,UAAS,0CACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG/E,UAAC,KAAM,CAACC,MAAM,SAAQ,yCACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG9E,UAAC,KAAM,CAACC,MAAM,UAAS,0CACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG/E,UAAC,KAAM,CAACC,MAAM,OAAM,uCACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG5E,UAAC,KAAM,CAACC,MAAM,QAAO,wCACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,qCAG7E,UAAC,KAAM,CAACC,MAAM,OAAM,uCACO,SAAC,KAAU,CAACD,KAAK,IAAG,6BAA6B,gDAOpF,SAAC,KAAI,CAACF,GAAI,GAAG,UACX,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,UAAC,KAAW,YACV,4CAA4B,KAAC,sDAE/B,UAAC,KAAS,YACR,cAAGA,UAAU,6BAA4B,mHAIzC,SAAC,KAAW,CAACC,KAAK,sCAAqC,UACrD,UAAC,KAAM,CAACC,MAAM,UAAS,WACrB,SAAC,KAAa,CAACC,IAAI,KAAI,yBACvB,0NAKA,mBACA,cAAGH,UAAU,OAAM,+GAS7B,SAAC,KAAI,CAACD,GAAI,GAAG,UACX,UAAC,KAAK,CAACC,UAAU,OAAM,WACrB,UAAC,KAAW,YACV,4CAA4B,KAAC,8CAE/B,UAAC,KAAS,YACR,eAAGA,UAAU,6BAA4B,gEACW,0CAAwB,aAE5E,SAAC,KAAW,CAACC,KAAK,8BAA6B,UAC7C,UAAC,KAAM,CACLC,MAAM,UACNE,aAAW,EACXC,QAAS,WACPC,MAAM,yDACR,EAAE,WAEF,+CAA+B,iEAQ/C,C","sources":["views/notifications/alerts/Alerts.js"],"sourcesContent":["import React from 'react'\nimport {\n  CAlert,\n  CAlertHeading,\n  CAlertLink,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst Alerts = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              React Alert is prepared for any length of text, as well as an optional close button.\n              For a styling, use one of the <strong>required</strong> contextual <code>color</code>{' '}\n              props (e.g., <code>primary</code>). For inline dismissal, use the{' '}\n              <a href=\"https://coreui.io/react/docs/4.0/components/alert#dismissing\">\n                dismissing prop\n              </a>\n              .\n            </p>\n            <DocsExample href=\"components/alert\">\n              <CAlert color=\"primary\">A simple primary alertâ€”check it out!</CAlert>\n              <CAlert color=\"secondary\">A simple secondary alertâ€”check it out!</CAlert>\n              <CAlert color=\"success\">A simple success alertâ€”check it out!</CAlert>\n              <CAlert color=\"danger\">A simple danger alertâ€”check it out!</CAlert>\n              <CAlert color=\"warning\">A simple warning alertâ€”check it out!</CAlert>\n              <CAlert color=\"info\">A simple info alertâ€”check it out!</CAlert>\n              <CAlert color=\"light\">A simple light alertâ€”check it out!</CAlert>\n              <CAlert color=\"dark\">A simple dark alertâ€”check it out!</CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Link color</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Use the <code>&lt;CAlertLink&gt;</code> component to immediately give matching colored\n              links inside any alert.\n            </p>\n            <DocsExample href=\"components/alert#link-color\">\n              <CAlert color=\"primary\">\n                A simple primary alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                A simple secondary alert with <CAlertLink href=\"#\">an example link</CAlertLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                A simple success alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                A simple danger alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                A simple warning alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give\n                it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                A simple info alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                A simple light alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                A simple dark alert with <CAlertLink href=\"#\">an example link</CAlertLink>. Give it\n                a click if you like.\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Additional content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Alert can also incorporate supplementary components &amp; elements like heading,\n              paragraph, and divider.\n            </p>\n            <DocsExample href=\"components/alert#additional-content\">\n              <CAlert color=\"success\">\n                <CAlertHeading tag=\"h4\">Well done!</CAlertHeading>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is\n                  going to run a bit longer so that you can see how spacing within an alert works\n                  with this kind of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and\n                  tidy.\n                </p>\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Alert</strong> <small>Dismissing</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Alerts can also be easily dismissed. Just add the <code>dismissible</code> prop.\n            </p>\n            <DocsExample href=\"components/alert#dismissing\">\n              <CAlert\n                color=\"warning\"\n                dismissible\n                onClose={() => {\n                  alert('ðŸ‘‹ Well, hi there! Thanks for dismissing me.')\n                }}\n              >\n                <strong>Go right ahead</strong> and click that dimiss over there on the right.\n              </CAlert>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Alerts\n"],"names":["xs","className","href","color","tag","dismissible","onClose","alert"],"sourceRoot":""}