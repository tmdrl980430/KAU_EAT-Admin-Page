{"version":3,"file":"static/js/821.2a2ddf07.chunk.js","mappings":"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","sources":["views/userAdmin/userAdmin.js"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst userAdmin = () => {\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [userData, setUserData] = useState(null)\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const [sortString, setSortString] = useState('DESC')\n\n  const [phoneNumber, setPhoneNumber] = useState('')\n\n  const [userIdx, setUserIdx] = useState('')\n  const [userId, setUserId] = useState('')\n  const [userPhoneNum, setUserPhoneNum] = useState('')\n  const [userName, setUserName] = useState('')\n  const [userPoint, setUserPoint] = useState('')\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n  }, [])\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  useEffect(() => {\n    getUsers()\n  }, [page])\n\n  useEffect(() => {\n    setPage(1)\n    getUsers()\n  }, [sortString])\n\n  useEffect(() => {\n    if (phoneNumber == '') {\n      setPage(1)\n      getUsers()\n    } else {\n      searchUsers()\n    }\n  }, [phoneNumber])\n\n  useEffect(() => {\n    if (userData != null && phoneNumber.length > 7) {\n      setUserIdx(userData[0].idx)\n      setUserId(userData[0].id)\n      setUserPhoneNum(userData[0].phoneNumber)\n      setUserName(userData[0].name)\n      setUserPoint(userData[0].point)\n    } else {\n      setUserIdx()\n      setUserId('')\n      setUserPhoneNum('')\n      setUserName('')\n      setUserPoint()\n    }\n  }, [userData])\n\n  const searchUsers = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .get(`${IP}/users/search?orderType=DESC&page=${page}&phoneNumber=${phoneNumber}`, {\n          headers: {\n            'x-access-token': localStorage.getItem('jwt-token'),\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            setUserData(response.data.result.users)\n            if (response.data.result.usersCount % 20 > 0) {\n              setMaxPage(parseInt(response.data.result.usersCount / 20) + 1)\n            } else {\n              setMaxPage(parseInt(response.data.result.usersCount / 20))\n            }\n          } else {\n            setUserData(null)\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const userModify = async () => {\n    setLoading(true)\n\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n      const response = await axios\n        .patch(\n          `${IP}/users`,\n          {\n            userIdx: userIdx,\n            name: userName,\n            phoneNumber: userPhoneNum,\n            id: userId,\n            point: userPoint,\n          },\n          {\n            headers: {\n              'x-access-token': jwt,\n            },\n          },\n        )\n        .then((response) => {\n          if (response.data.code === 1000) {\n            alert('수정되었습니다.')\n            setUserIdx()\n            setUserId('')\n            setUserPhoneNum('')\n            setUserName('')\n            setUserPoint()\n            setUserData(null)\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const getUsers = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .get(`${IP}/users?orderType=${sortString}&page=${page}`, {\n          headers: {\n            'x-access-token': localStorage.getItem('jwt-token'),\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            setUserData(response.data.result.users)\n            if (response.data.result.usersCount % 20 > 0) {\n              setMaxPage(parseInt(response.data.result.usersCount / 20) + 1)\n            } else {\n              setMaxPage(parseInt(response.data.result.usersCount / 20))\n            }\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n  const pagePlus = () => {\n    if (page + 1 > maxPage) {\n      alert('마지막 페이지 입니다.')\n    } else {\n      setPage(page + 1)\n    }\n  }\n\n  const pageMinus = () => {\n    if (page - 1 === 0) {\n      alert('첫 페이지 입니다.')\n    } else {\n      setPage(page - 1)\n    }\n  }\n\n  const columns = [\n    {\n      key: 'idx',\n      label: '유저번호',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'name',\n      label: '이름',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'phoneNumber',\n      label: '전화번호',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'id',\n      label: '아이디',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'createdAt',\n      label: '가입날짜',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'point',\n      label: '포인트',\n      _props: {\n        scope: 'col',\n      },\n    },\n  ]\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>유저 조회하기</strong>\n        </CCardHeader>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            전화번호\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"찾으시는 유저의 전화번호를 입력해주세요.\"\n              onChange={(e) => {\n                setPhoneNumber(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <div>\n          <CButton\n            type=\"button\"\n            color=\"secondary\"\n            onClick={() => {\n              setSortString('DESC')\n            }}\n          >\n            최신 순\n          </CButton>\n          <span> </span>\n          <CButton\n            type=\"button\"\n            color=\"secondary\"\n            onClick={() => {\n              setSortString('ASC')\n            }}\n          >\n            오래된 순\n          </CButton>\n        </div>\n        <CRow>\n          <CTable columns={columns} items={userData} striped hover></CTable>\n        </CRow>\n        {maxPage > 1 && (\n          <div>\n            <CButton type=\"button\" onClick={pageMinus}>\n              이전\n            </CButton>\n            <span> </span>\n            <CButton type=\"button\" onClick={pagePlus}>\n              다음\n            </CButton>\n          </div>\n        )}\n        {phoneNumber.length > 7 ? (\n          <CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                아이디\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userId}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 아이디를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserId(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                이름\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userName}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 아이디를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserName(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                전화번호\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userPhoneNum}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 아이디를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserPhoneNum(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                포인트\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userPoint}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 아이디를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserPoint(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CButton type=\"button\" onClick={userModify}>\n              수정하기\n            </CButton>\n          </CRow>\n        ) : (\n          <div></div>\n        )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default userAdmin\n"],"names":["useRecoilState","severURLRecoilState","IP","jwtRecoilState","jwt","setJwt","useState","setLoading","setError","userData","setUserData","page","setPage","maxPage","setMaxPage","sortString","setSortString","phoneNumber","setPhoneNumber","userIdx","setUserIdx","userId","setUserId","userPhoneNum","setUserPhoneNum","userName","setUserName","userPoint","setUserPoint","useEffect","localStorage","getItem","getUsers","searchUsers","length","idx","id","name","point","axios","headers","then","response","data","code","result","users","usersCount","parseInt","catch","error","userModify","alert","className","htmlFor","sm","type","placeholder","onChange","e","target","value","color","onClick","columns","key","label","_props","scope","items","striped","hover"],"sourceRoot":""}