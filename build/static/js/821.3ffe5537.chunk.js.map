{"version":3,"file":"static/js/821.3ffe5537.chunk.js","mappings":"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","sources":["views/userAdmin/userAdmin.js"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst userAdmin = () => {\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [userData, setUserData] = useState(null)\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const [sortString, setSortString] = useState('DESC')\n\n  const [phoneNumber, setPhoneNumber] = useState('')\n\n  const [userIdx, setUserIdx] = useState('')\n  const [userId, setUserId] = useState('')\n  const [userPhoneNum, setUserPhoneNum] = useState('')\n  const [userName, setUserName] = useState('')\n  const [userPoint, setUserPoint] = useState('')\n  const [userTiketBreakfast, setUserTiketBreakfast] = useState('')\n  const [userTiketLunch, setUserTiketLunch] = useState('')\n  const [userTiketLunchKorea, setUserLunchKorea] = useState('')\n  const [userTiketLunchNoodle, setUserTiketLunchNoodle] = useState('')\n  const [userTiketDinner, setUserTiketDinner] = useState('')\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n  }, [])\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  useEffect(() => {\n    getUsers()\n  }, [page])\n\n  useEffect(() => {\n    setPage(1)\n    getUsers()\n  }, [sortString])\n\n  useEffect(() => {\n    if (phoneNumber == '' || phoneNumber == null) {\n      setPage(1)\n      getUsers()\n    } else if (phoneNumber.length > 7) {\n      searchUsers()\n    }\n  }, [phoneNumber])\n\n  useEffect(() => {\n    if (userData != null && phoneNumber.length > 7) {\n      setUserIdx(userData[0].idx)\n      setUserId(userData[0].id)\n      setUserPhoneNum(userData[0].phoneNumber)\n      setUserName(userData[0].name)\n      setUserPoint(userData[0].point)\n    } else {\n      setUserIdx()\n      setUserId('')\n      setUserPhoneNum('')\n      setUserName('')\n      setUserPoint()\n    }\n  }, [userData])\n\n  useEffect(() => {\n    if (userData != null) {\n      getUserInfo()\n    } else {\n      setUserTiketBreakfast('')\n      setUserTiketLunch('')\n      setUserLunchKorea('')\n      setUserTiketLunchNoodle('')\n      setUserTiketDinner('')\n    }\n  }, [userIdx])\n\n  const searchUsers = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .get(`${IP}/users/search?orderType=DESC&page=${page}&phoneNumber=${phoneNumber}`, {\n          headers: {\n            'x-access-token': localStorage.getItem('jwt-token'),\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            setUserData(response.data.result.users)\n            if (response.data.result.usersCount % 20 > 0) {\n              setMaxPage(parseInt(response.data.result.usersCount / 20) + 1)\n            } else {\n              setMaxPage(parseInt(response.data.result.usersCount / 20))\n            }\n          } else if (response.data.code === 2047) {\n            alert('존재하지 않는 유저입니다.')\n            setPhoneNumber('')\n          } else {\n            setUserData(null)\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const userModify = async () => {\n    setLoading(true)\n\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n      const response = await axios\n        .patch(\n          `${IP}/users`,\n          {\n            userIdx: userIdx,\n            name: userName,\n            phoneNumber: userPhoneNum,\n            id: userId,\n            point: userPoint,\n            mealTickets: [\n              {\n                mealTypeIdx: 1,\n                mealTicketCount: userTiketBreakfast,\n              },\n              {\n                mealTypeIdx: 2,\n                mealTicketCount: userTiketLunch,\n              },\n              {\n                mealTypeIdx: 3,\n                mealTicketCount: userTiketLunchKorea,\n              },\n              {\n                mealTypeIdx: 4,\n                mealTicketCount: userTiketLunchNoodle,\n              },\n              {\n                mealTypeIdx: 5,\n                mealTicketCount: userTiketDinner,\n              },\n            ],\n          },\n          {\n            headers: {\n              'x-access-token': jwt,\n            },\n          },\n        )\n        .then((response) => {\n          if (response.data.code === 1000) {\n            alert('수정되었습니다.')\n            setUserIdx(null)\n            setUserId('')\n            setUserPhoneNum(null)\n            setUserName('')\n            setUserPoint('')\n            setUserData(null)\n            setUserTiketBreakfast('')\n            setUserTiketLunch('')\n            setUserLunchKorea('')\n            setUserTiketLunchNoodle('')\n            setUserTiketDinner('')\n            setPhoneNumber('')\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const getUserInfo = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .get(`${IP}/users/${userIdx}`, {\n          headers: {\n            'x-access-token': localStorage.getItem('jwt-token'),\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            if (response.data.result.user.mealTickets.length != 0) {\n              for (let i = 0; i < response.data.result.user.mealTickets.length; i++) {\n                if (response.data.result.user.mealTickets[i].mealTypeIdx === 1) {\n                  setUserTiketBreakfast(response.data.result.user.mealTickets[i].mealTicketCount)\n                } else if (response.data.result.user.mealTickets[i].mealTypeIdx === 2) {\n                  setUserTiketLunch(response.data.result.user.mealTickets[i].mealTicketCount)\n                } else if (response.data.result.user.mealTickets[i].mealTypeIdx === 3) {\n                  setUserLunchKorea(response.data.result.user.mealTickets[i].mealTicketCount)\n                } else if (response.data.result.user.mealTickets[i].mealTypeIdx === 4) {\n                  setUserTiketLunchNoodle(response.data.result.user.mealTickets[i].mealTicketCount)\n                } else if (response.data.result.user.mealTickets[i].mealTypeIdx === 5) {\n                  setUserTiketDinner(response.data.result.user.mealTickets[i].mealTicketCount)\n                }\n              }\n            }\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const getUsers = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .get(`${IP}/users?orderType=${sortString}&page=${page}`, {\n          headers: {\n            'x-access-token': localStorage.getItem('jwt-token'),\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            setUserData(response.data.result.users)\n            if (response.data.result.usersCount % 20 > 0) {\n              setMaxPage(parseInt(response.data.result.usersCount / 20) + 1)\n            } else {\n              setMaxPage(parseInt(response.data.result.usersCount / 20))\n            }\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n  const pagePlus = () => {\n    if (page + 1 > maxPage) {\n      alert('마지막 페이지 입니다.')\n    } else {\n      setPage(page + 1)\n    }\n  }\n\n  const pageMinus = () => {\n    if (page - 1 === 0) {\n      alert('첫 페이지 입니다.')\n    } else {\n      setPage(page - 1)\n    }\n  }\n\n  const columns = [\n    {\n      key: 'idx',\n      label: '유저번호',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'name',\n      label: '이름',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'phoneNumber',\n      label: '전화번호',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'id',\n      label: '아이디',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'createdAt',\n      label: '가입날짜',\n      _props: {\n        scope: 'col',\n      },\n    },\n    {\n      key: 'point',\n      label: '포인트',\n      _props: {\n        scope: 'col',\n      },\n    },\n  ]\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>유저 조회하기</strong>\n        </CCardHeader>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            전화번호\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              type=\"text\"\n              id=\"inputDate\"\n              value={phoneNumber}\n              placeholder=\"찾으시는 유저의 전화번호를 입력해주세요.\"\n              onChange={(e) => {\n                setPhoneNumber(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <div>\n          <CButton\n            type=\"button\"\n            color=\"secondary\"\n            onClick={() => {\n              setSortString('DESC')\n            }}\n          >\n            최신 순\n          </CButton>\n          <span> </span>\n          <CButton\n            type=\"button\"\n            color=\"secondary\"\n            onClick={() => {\n              setSortString('ASC')\n            }}\n          >\n            오래된 순\n          </CButton>\n        </div>\n        <CRow>\n          <CTable columns={columns} items={userData} striped hover></CTable>\n        </CRow>\n        {maxPage > 1 && (\n          <div>\n            <CButton type=\"button\" onClick={pageMinus}>\n              이전\n            </CButton>\n            <span> </span>\n            <CButton type=\"button\" onClick={pagePlus}>\n              다음\n            </CButton>\n          </div>\n        )}\n        {phoneNumber.length > 7 ? (\n          <CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                아이디\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userId}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 아이디를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserId(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                이름\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userName}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 이름을 적어주세요.\"\n                  onChange={(e) => {\n                    setUserName(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                전화번호\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userPhoneNum}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 전화번호를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserPhoneNum(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                포인트\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userPoint}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 포인트를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserPoint(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                조식\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userTiketBreakfast}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 조식의 개수를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserTiketBreakfast(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                중식|일품\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userTiketLunch}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 일품의 개수를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserTiketLunch(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                중식|한식\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userTiketLunchKorea}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 한식의 개수를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserLunchKorea(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                중식(면)\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userTiketLunchNoodle}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 면의 개수를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserTiketLunchNoodle(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CRow className=\"mb-3\">\n              <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n                석식\n              </CFormLabel>\n              <CCol sm={10}>\n                <CFormInput\n                  value={userTiketDinner}\n                  type=\"text\"\n                  id=\"inputMenu\"\n                  placeholder=\"수정하실 석식의 개수를 적어주세요.\"\n                  onChange={(e) => {\n                    setUserTiketDinner(e.target.value)\n                  }}\n                />\n              </CCol>\n            </CRow>\n            <CButton type=\"button\" onClick={userModify}>\n              수정하기\n            </CButton>\n          </CRow>\n        ) : (\n          <div></div>\n        )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default userAdmin\n"],"names":["useRecoilState","severURLRecoilState","IP","jwtRecoilState","jwt","setJwt","useState","setLoading","setError","userData","setUserData","page","setPage","maxPage","setMaxPage","sortString","setSortString","phoneNumber","setPhoneNumber","userIdx","setUserIdx","userId","setUserId","userPhoneNum","setUserPhoneNum","userName","setUserName","userPoint","setUserPoint","userTiketBreakfast","setUserTiketBreakfast","userTiketLunch","setUserTiketLunch","userTiketLunchKorea","setUserLunchKorea","userTiketLunchNoodle","setUserTiketLunchNoodle","userTiketDinner","setUserTiketDinner","useEffect","localStorage","getItem","getUsers","length","searchUsers","idx","id","name","point","getUserInfo","axios","headers","then","response","data","code","result","users","usersCount","parseInt","alert","catch","error","userModify","mealTickets","mealTypeIdx","mealTicketCount","user","i","className","htmlFor","sm","type","value","placeholder","onChange","e","target","color","onClick","columns","key","label","_props","scope","items","striped","hover"],"sourceRoot":""}