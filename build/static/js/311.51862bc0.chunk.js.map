{"version":3,"file":"static/js/311.51862bc0.chunk.js","mappings":"iSAkJA,UAlI4B,WAC1B,IAAMA,EAAM,IAAIC,KAChB,GAAoBC,EAAAA,EAAAA,IAAeC,EAAAA,IAAoB,eAAhDC,EAAE,KACT,GADgB,MACMF,EAAAA,EAAAA,IAAeG,EAAAA,KAAe,eAA7CC,EAAG,KAAEC,EAAM,KAEZC,EAASR,EAAIS,UAAsC,GAA1BT,EAAIU,oBAA2B,IAG9D,GADiB,IAAIT,KAAKO,EADJ,QAEQG,EAAAA,EAAAA,WAAS,IAAM,eAA7BC,GAAF,KAAY,MAC1B,GAA0BD,EAAAA,EAAAA,UAAS,MAAK,eAA1BE,GAAF,KAAU,MAEtB,GAA8BF,EAAAA,EAAAA,UAAS,IAAG,eAAnCG,EAAO,KAAEC,EAAU,KAC1B,GAA4CJ,EAAAA,EAAAA,UAAS,IAAG,eAAjDK,EAAc,KAAEC,EAAiB,MAExCC,EAAAA,EAAAA,YAAU,WACRX,EAAOY,aAAaC,QAAQ,cAC5BC,GACF,GAAG,IAEH,IAAMC,EAAmB,yCAAG,mFASxB,OARFV,GAAW,GAAK,SAIdC,EAAS,MAETD,GAAW,GAEX,SAEuBW,IAAAA,KACf,GAAD,OACAnB,EAAE,aACL,CACEU,QAASA,GAEX,CACEU,QAAS,CACP,iBAAkBlB,KAIvBmB,MAAK,SAACC,GACsB,MAAvBA,EAASC,KAAKC,MAChBC,MAAM,sDACNZ,EAAkBH,IAElBe,MAAMH,EAASC,KAAKG,QAExB,IACCC,OAAM,SAACC,GAAW,IAAE,OApBT,uDAsBdnB,EAAS,EAAD,IAAG,QAGbD,GAAW,GACX,yDACD,kBAtCwB,mCAwCnBS,EAAU,yCAAG,mFASf,OARFT,GAAW,GAAK,SAIdC,EAAS,MAETD,GAAW,GAEX,SAEuBW,IAAAA,IAChB,GAAD,OAAInB,EAAE,aAAa,CACrBoB,QAAS,CACP,iBAAkBlB,KAGrBmB,MAAK,SAACC,GACsB,MAAvBA,EAASC,KAAKC,OAChBb,EAAWW,EAASC,KAAKM,OAAOnB,SAChCG,EAAkBS,EAASC,KAAKM,OAAOnB,SAE3C,IACCiB,OAAM,SAACC,GAAW,IAAE,OAZT,uDAcdnB,EAAS,EAAD,IAAG,QAGbD,GAAW,GACX,yDACD,kBA9Be,mCAqChB,OACE,0BACE,UAAC,KAAK,YACJ,SAAC,KAAW,WACV,6DAEF,gEACUI,EAAc,kLAGxB,UAAC,KAAI,CAACkB,UAAU,OAAM,WACpB,SAAC,KAAU,CAACC,QAAQ,YAAYD,UAAU,0BAAyB,2BAGnE,SAAC,KAAI,CAACE,GAAI,GAAG,UACX,SAAC,KAAU,CACTC,MAAOvB,EACPwB,KAAK,OACLC,GAAG,YACHC,YAAY,oFACZC,SAAU,SAACC,GACT3B,EAAW2B,EAAEC,OAAON,MACtB,UAIN,SAAC,KAAO,CAACC,KAAK,SAASM,QAAStB,EAAoB,0CAM5D,C","sources":["views/versionRegistration/VersionRegistration.js"],"sourcesContent":["/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CFormText,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst VersionRegistration = () => {\n  const now = new Date()\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n\n  const utcNow = now.getTime() + now.getTimezoneOffset() * 60 * 1000 // 현재 시간을 utc로 변환한 밀리세컨드값\n  const koreaTimeDiff = 9 * 60 * 60 * 1000 // 한국 시간은 UTC보다 9시간 빠름(9시간의 밀리세컨드 표현)\n  const koreaNow = new Date(utcNow + koreaTimeDiff) // utc로 변환된 값을 한국 시간으로 변환시키기 위해 9시간(밀리세컨드)를 더함\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [version, setVersion] = useState('')\n  const [currentVersion, setCurrentVersion] = useState('')\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n    getVeriosn()\n  }, [])\n\n  const veriosnRegistration = async () => {\n    setLoading(true)\n\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n      const response = await axios\n        .post(\n          `${IP}/versions`,\n          {\n            version: version,\n          },\n          {\n            headers: {\n              'x-access-token': jwt,\n            },\n          },\n        )\n        .then((response) => {\n          if (response.data.code === 1000) {\n            alert(`버전 업데이트 완료`)\n            setCurrentVersion(version)\n          } else {\n            alert(response.data.message)\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const getVeriosn = async () => {\n    setLoading(true)\n\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n      const response = await axios\n        .get(`${IP}/versions`, {\n          headers: {\n            'x-access-token': jwt,\n          },\n        })\n        .then((response) => {\n          if (response.data.code === 1000) {\n            setVersion(response.data.result.version)\n            setCurrentVersion(response.data.result.version)\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key !== 'Enter') {\n    }\n  }\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>버전 관리</strong>\n        </CCardHeader>\n        <small>\n          현재 버전은 {currentVersion}입니다. 어플의 업데이트가 완료된 후 새로운 버전을\n          입력해주세요.\n        </small>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            버전\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={version}\n              type=\"text\"\n              id=\"inputMenu\"\n              placeholder=\"등록할 포인트를 입력해주세요.\"\n              onChange={(e) => {\n                setVersion(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CButton type=\"submit\" onClick={veriosnRegistration}>\n          등록하기\n        </CButton>\n      </CForm>\n    </div>\n  )\n}\n\nexport default VersionRegistration\n"],"names":["now","Date","useRecoilState","severURLRecoilState","IP","jwtRecoilState","jwt","setJwt","utcNow","getTime","getTimezoneOffset","useState","setLoading","setError","version","setVersion","currentVersion","setCurrentVersion","useEffect","localStorage","getItem","getVeriosn","veriosnRegistration","axios","headers","then","response","data","code","alert","message","catch","error","result","className","htmlFor","sm","value","type","id","placeholder","onChange","e","target","onClick"],"sourceRoot":""}