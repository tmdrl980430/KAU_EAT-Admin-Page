{"version":3,"file":"static/js/9.9d27ae98.chunk.js","mappings":"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","sources":["views/pages/register/Register.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","../node_modules/@coreui/icons/js/free/cil-user.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { severURLRecoilState } from 'src/recoil'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst Register = () => {\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [id, setId] = useState('')\n  const [idValidationCheck, setIdValidationCheck] = useState(false)\n  const [password, setPassword] = useState('')\n  const [passwordCheck, setPasswordCheck] = useState('')\n  const [adminKey, setAdminKey] = useState('')\n  const [isSignUp, setIsSignUp] = useState(false)\n  const [passwordVaild, setPasswordVaild] = useState(false)\n  const [passwordCheckVaild, setPasswordCheckVaild] = useState(false)\n\n  const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,20}$/\n\n  useEffect(() => {\n    if (passwordRegex.test(password) === true) {\n      setPasswordVaild(true)\n    } else {\n      setPasswordVaild(false)\n    }\n  }, [password])\n\n  useEffect(() => {\n    if (password === passwordCheck) {\n      setPasswordCheckVaild(true)\n    } else {\n      setPasswordCheckVaild(false)\n    }\n  }, [passwordCheck])\n\n  useEffect(() => {\n    if (id.length > 5) {\n      setIdValidationCheck(true)\n    } else {\n      setIdValidationCheck(false)\n    }\n  }, [id])\n\n  const postSignUpAdmin = async () => {\n    setLoading(true)\n\n    if (id !== '' && password !== '' && passwordCheck === password && idValidationCheck) {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null)\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true)\n        const response = await axios\n          .post(`${IP}/users`, {\n            id: id,\n            password: password,\n            approveNumber: adminKey,\n          })\n          .then((response) => {\n            if (response.data.code === 1000) {\n              alert('회원가입 성공!')\n              navigate('/login')\n            } else if (response.data.code === 2018) {\n              alert('이미 가입된 아이디입니다.')\n            } else if (response.data.code === 2017) {\n              alert('관리자 비밀번호가 틀렸습니다.')\n            } else if (response.data.code === 2004) {\n              alert('비밀번호 형식을 확인해주세요.')\n            } else if (response.data.code === 2002) {\n              alert('아이디 길이를 확인해주세요.')\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9} lg={7} xl={6}>\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>관리자 회원가입</h1>\n                  <p className=\"text-medium-emphasis\">회원가입</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilUser} />\n                    </CInputGroupText>\n                    <CFormInput\n                      placeholder=\"아이디\"\n                      autoComplete=\"username\"\n                      onChange={(e) => {\n                        setId(e.target.value)\n                      }}\n                    />\n                  </CInputGroup>\n                  {idValidationCheck != true && (\n                    <div style={{ color: 'red' }}>아이디는 6글자 이상으로 설정해주세요.</div>\n                  )}\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"비밀번호\"\n                      autoComplete=\"new-password\"\n                      onChange={(e) => {\n                        setPassword(e.target.value)\n                      }}\n                    />\n                  </CInputGroup>\n                  {passwordVaild != true && (\n                    <div style={{ color: 'red' }}>\n                      비밀번호는 영문/숫자를 혼용 8~20자리 이내로 입력해주세요.\n                    </div>\n                  )}\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"비밀번호 확인\"\n                      autoComplete=\"new-password\"\n                      onChange={(e) => {\n                        setPasswordCheck(e.target.value)\n                      }}\n                    />\n                  </CInputGroup>\n                  {passwordCheckVaild != true && (\n                    <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div>\n                  )}\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupText>\n                      <CIcon icon={cilLockLocked} />\n                    </CInputGroupText>\n                    <CFormInput\n                      type=\"password\"\n                      placeholder=\"관리자 비밀번호\"\n                      autoComplete=\"admin-password\"\n                      onChange={(e) => {\n                        setAdminKey(e.target.value)\n                      }}\n                    />\n                  </CInputGroup>\n                  <CButton\n                    color=\"success\"\n                    className=\"mt-3\"\n                    active\n                    tabIndex={-1}\n                    onClick={postSignUpAdmin}\n                  >\n                    회원가입\n                  </CButton>\n                </CForm>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setError","_useRecoilState","useRecoilState","severURLRecoilState","_useRecoilState2","IP","_useState5","_useState6","id","setId","_useState7","_useState8","idValidationCheck","setIdValidationCheck","_useState9","_useState10","password","setPassword","_useState11","_useState12","passwordCheck","setPasswordCheck","_useState13","_useState14","adminKey","setAdminKey","_useState15","_useState16","_useState17","_useState18","passwordVaild","setPasswordVaild","_useState19","_useState20","passwordCheckVaild","setPasswordCheckVaild","passwordRegex","useEffect","test","length","postSignUpAdmin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","concat","approveNumber","then","response","data","code","alert","catch","error","sent","t0","stop","apply","arguments","_jsx","className","children","CContainer","CRow","CCol","md","lg","xl","CCard","CCardBody","_jsxs","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","onChange","e","target","value","style","color","cilLockLocked","type","CButton","active","tabIndex","onClick"],"sourceRoot":""}