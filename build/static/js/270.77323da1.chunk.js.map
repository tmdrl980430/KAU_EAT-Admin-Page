{"version":3,"file":"static/js/270.77323da1.chunk.js","mappings":"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","sources":["views/mealTable/MealTable.js"],"sourcesContent":["/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CFormText,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst MealTable = () => {\n  const now = new Date()\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n\n  const utcNow = now.getTime() + now.getTimezoneOffset() * 60 * 1000 // 현재 시간을 utc로 변환한 밀리세컨드값\n  const koreaTimeDiff = 9 * 60 * 60 * 1000 // 한국 시간은 UTC보다 9시간 빠름(9시간의 밀리세컨드 표현)\n  const koreaNow = new Date(utcNow + koreaTimeDiff) // utc로 변환된 값을 한국 시간으로 변환시키기 위해 9시간(밀리세컨드)를 더함\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [date, setDate] = useState(null)\n  const [breakfastMenu, setBreakfastMenu] = useState(null)\n  const [lunchMenu, setLunchMenu] = useState(null)\n  const [lunchKoreaMenu, setLunchKoreaMenu] = useState(null)\n  const [dinnerMenu, setDinnerMenu] = useState(null)\n  const [lunchNoodleMenu, setLunchNoodleMenu] = useState(null)\n  const [ramenMenu, setRamenMenu] = useState(null)\n  const [kimbabMenu, setKimbabMenu] = useState(null)\n  const [hotdogMenu, setHotdogMenu] = useState(null)\n  const [chickenMenu, setChickenMenu] = useState(null)\n  const [isMenu, setIsMenu] = useState(false)\n  const [dateClick, setDateClick] = useState(false)\n  const [breakfastMenuIdx, setBreakfastMenuIdx] = useState(0)\n  const [lunchMenuIdx, setLunchMenuIdx] = useState(0)\n  const [lunchKoreaMenuIdx, setLunchKoreaMenuIdx] = useState(0)\n  const [dinnerMenuIdx, setDinnerMenuIdx] = useState(0)\n  const [lunchNoodleMenuIdx, setLunchNoodleMenuIdx] = useState(0)\n  const [ramenMenuIdx, setRamenMenuIdx] = useState(0)\n  const [kimbabMenuIdx, setKimbabMenuIdx] = useState(0)\n  const [hotdogMenuIdx, setHotdogMenuIdx] = useState(0)\n  const [chickenMenuIdx, setChickenMenuIdx] = useState(0)\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n    setDate(today)\n  }, [])\n\n  const today =\n    String(koreaNow.getFullYear()) +\n    '-' +\n    String(koreaNow.getMonth() + 1).padStart(2, '0') +\n    '-' +\n    String(koreaNow.getDate()).padStart(2, '0')\n\n  const setDateMealTable = async () => {\n    setBreakfastMenu(null)\n    setLunchMenu(null)\n    setLunchKoreaMenu(null)\n    setDinnerMenu(null)\n    setLunchNoodleMenu(null)\n    setRamenMenu(null)\n    setKimbabMenu(null)\n    setHotdogMenu(null)\n    setChickenMenu(null)\n    setLoading(true)\n\n    if (date != '') {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null)\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true)\n\n        const response = await axios\n          .get(`${IP}/menus?date=${date}`, {\n            headers: {\n              'x-access-token': jwt,\n            },\n          })\n          .then((response) => {\n            if (response.data.code === 1000) {\n              if (response.data.result.menus.length == 0) {\n                setIsMenu(false)\n                setBreakfastMenuIdx(0)\n                setLunchMenuIdx(0)\n                setLunchKoreaMenuIdx(0)\n                setDinnerMenuIdx(0)\n                setLunchNoodleMenuIdx(0)\n                setRamenMenuIdx(0)\n                setKimbabMenuIdx(0)\n                setHotdogMenuIdx(0)\n                setChickenMenuIdx(0)\n              } else {\n                setIsMenu(true)\n                for (let i = 0; i < response.data.result.menus.length; i++) {\n                  if (response.data.result.menus[i].mealTypeIdx === 1) {\n                    setBreakfastMenu(response.data.result.menus[i].name)\n                    setBreakfastMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 2) {\n                    setLunchMenu(response.data.result.menus[i].name)\n                    setLunchMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 3) {\n                    setLunchKoreaMenu(response.data.result.menus[i].name)\n                    setLunchKoreaMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 5) {\n                    setDinnerMenu(response.data.result.menus[i].name)\n                    setDinnerMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 4) {\n                    setLunchNoodleMenu(response.data.result.menus[i].name)\n                    setLunchNoodleMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 6) {\n                    setRamenMenu(response.data.result.menus[i].name)\n                    setRamenMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 7) {\n                    setKimbabMenu(response.data.result.menus[i].name)\n                    setKimbabMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 9) {\n                    setHotdogMenu(response.data.result.menus[i].name)\n                    setHotdogMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 10) {\n                    setChickenMenu(response.data.result.menus[i].name)\n                    setChickenMenuIdx(response.data.result.menus[i].menuIdx)\n                  }\n                }\n              }\n            } else {\n              alert(response.data.message)\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const mealTableRegistration = async () => {\n    setLoading(true)\n\n    let registrationList = []\n    if (date != '') {\n      if (breakfastMenu !== null) {\n        registrationList.push({ mealTypeIdx: 1, name: breakfastMenu })\n      }\n      if (lunchMenu !== null) {\n        registrationList.push({ mealTypeIdx: 2, name: lunchMenu })\n      }\n      if (lunchKoreaMenu !== null) {\n        registrationList.push({ mealTypeIdx: 3, name: lunchKoreaMenu })\n      }\n      if (dinnerMenu !== null) {\n        registrationList.push({ mealTypeIdx: 5, name: dinnerMenu })\n      }\n      if (lunchNoodleMenu !== null) {\n        registrationList.push({ mealTypeIdx: 4, name: lunchNoodleMenu })\n      }\n      if (ramenMenu !== null) {\n        registrationList.push({ mealTypeIdx: 6, name: ramenMenu })\n      }\n      if (kimbabMenu !== null) {\n        registrationList.push({ mealTypeIdx: 7, name: kimbabMenu })\n      }\n      if (hotdogMenu !== null) {\n        registrationList.push({ mealTypeIdx: 9, name: hotdogMenu })\n      }\n      if (chickenMenu !== null) {\n        registrationList.push({ mealTypeIdx: 10, name: chickenMenu })\n      }\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null)\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true)\n\n        // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n        const response = await axios\n          .post(\n            `${IP}/menus`,\n            {\n              availableAt: date,\n              menus: registrationList,\n            },\n            {\n              headers: {\n                'x-access-token': jwt,\n              },\n            },\n          )\n          .then((response) => {\n            if (response.data.code === 1000) {\n              alert(`${date} 식단이 등록 되었습니다.`)\n            } else {\n              alert(response.data.message)\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>날짜 등록하기</strong>\n        </CCardHeader>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            날짜\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={date}\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"날짜를 2022-09-15 형식으로 입력해주세요.\"\n              onChange={(e) => {\n                setDate(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CButton type=\"button\" onClick={setDateMealTable} color=\"dark\">\n          날짜 조회하기\n        </CButton>\n        <CCardHeader>\n          <strong>메뉴 등록하기</strong>{' '}\n        </CCardHeader>\n        <small>밥, 스파게티, 국, 김치 형식으로 입력해주세요.</small>\n        <small>운영을 하지 않을때는 빈칸으로 입력해주세요.</small>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            조식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={breakfastMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setBreakfastMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 일품\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 한식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchKoreaMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchKoreaMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식(면)\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchNoodleMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchNoodleMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            석식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={dinnerMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setDinnerMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            라면\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={ramenMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setRamenMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            김밥\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={kimbabMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setKimbabMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            핫도그\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={hotdogMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setHotdogMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            치킨\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={chickenMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setChickenMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        {isMenu ? (\n          <CButton type=\"button\" onClick={mealTableRegistration}>\n            수정하기\n          </CButton>\n        ) : (\n          <CButton type=\"button\" onClick={mealTableRegistration}>\n            등록하기\n          </CButton>\n        )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default MealTable\n"],"names":["now","Date","useRecoilState","severURLRecoilState","IP","jwtRecoilState","jwt","setJwt","utcNow","getTime","getTimezoneOffset","koreaNow","useState","setLoading","setError","date","setDate","breakfastMenu","setBreakfastMenu","lunchMenu","setLunchMenu","lunchKoreaMenu","setLunchKoreaMenu","dinnerMenu","setDinnerMenu","lunchNoodleMenu","setLunchNoodleMenu","ramenMenu","setRamenMenu","kimbabMenu","setKimbabMenu","hotdogMenu","setHotdogMenu","chickenMenu","setChickenMenu","isMenu","setIsMenu","setBreakfastMenuIdx","setLunchMenuIdx","setLunchKoreaMenuIdx","setDinnerMenuIdx","setLunchNoodleMenuIdx","setRamenMenuIdx","setKimbabMenuIdx","setHotdogMenuIdx","setChickenMenuIdx","useEffect","localStorage","getItem","today","String","getFullYear","getMonth","padStart","getDate","setDateMealTable","axios","headers","then","response","data","code","result","menus","length","i","mealTypeIdx","name","menuIdx","alert","message","catch","error","mealTableRegistration","registrationList","push","availableAt","className","htmlFor","sm","value","type","id","placeholder","onChange","e","target","onClick","color"],"sourceRoot":""}