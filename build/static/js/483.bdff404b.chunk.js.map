{"version":3,"file":"static/js/483.bdff404b.chunk.js","mappings":"iSAkLA,UAlK2B,WACzB,IAAMA,EAAM,IAAIC,KAChBC,GAAoBC,EAAAA,EAAAA,IAAeC,EAAAA,IAAoBC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAhDK,EAAEF,EAAA,GACTG,GADgBH,EAAA,IACMF,EAAAA,EAAAA,IAAeM,EAAAA,KAAeC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAA7CG,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAEZG,EAASb,EAAIc,UAAsC,GAA1Bd,EAAIe,oBAA2B,IAG9DC,GADiB,IAAIf,KAAKY,EADJ,QAEQI,EAAAA,EAAAA,WAAS,IAAMC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAA7BG,GAAFD,EAAA,GAAYA,EAAA,IAC1BE,GAA0BH,EAAAA,EAAAA,UAAS,MAAKI,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA1BE,GAAFD,EAAA,GAAUA,EAAA,IAEtBE,GAAwBN,EAAAA,EAAAA,UAAS,IAAGO,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BV,EAAAA,EAAAA,UAAS,IAAGW,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAgCd,EAAAA,EAAAA,UAAS,IAAGe,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA0BlB,EAAAA,EAAAA,UAAS,IAAGmB,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAEtBG,EAAAA,EAAAA,YAAU,WACR3B,EAAO4B,aAAaC,QAAQ,aAC9B,GAAG,IAEH,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAStB,OARFhC,GAAW,GAAK8B,EAAAC,KAAA,EAId5B,EAAS,MAETH,GAAW,GAEX8B,EAAAE,KAAA,EAEuBC,IAAAA,MACd,GAADC,OACD9C,EAAE,gBACL,CACEkB,KAAMA,EACN6B,YAAarB,EACbI,MAAOA,EACPkB,GAAI1B,GAEN,CACE2B,QAAS,CACP,iBAAkB7C,KAIvB8C,MAAK,SAACC,GACsB,MAAvBA,EAASC,KAAKC,MAChBC,MAAM,GAADR,OAAI5B,EAAI,kDACbC,EAAQ,IACRI,EAAU,IACVI,EAAY,IACZI,EAAS,KACuB,OAAvBoB,EAASC,KAAKC,MACvBC,MAAM,yEACNnC,EAAQ,IACRI,EAAU,IACVI,EAAY,IACZI,EAAS,KACuB,OAAvBoB,EAASC,KAAKC,MACvBC,MAAM,qFACN/B,EAAU,KACsB,OAAvB4B,EAASC,KAAKC,MACvBC,MAAM,oGACNvB,EAAS,KACuB,OAAvBoB,EAASC,KAAKC,OACvBC,MAAM,kEACNvB,EAAS,IAEb,IACCwB,OAAM,SAACC,GAAW,IAAE,OAvCTd,EAAAe,KAAAf,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgB,GAAAhB,EAAA,SAyCd3B,EAAQ2B,EAAAgB,IAAG,QAGb9C,GAAW,GACX,yBAAA8B,EAAAiB,OAAA,GAAAnB,EAAA,kBACD,kBAzDsB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAgEvB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAAAF,SAAA,EACJD,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAAAH,UACVD,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,2DAEVC,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,OAAML,SAAA,EACpBD,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAACC,QAAQ,YAAYF,UAAU,0BAAyBL,SAAC,kBAGpED,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,GAAGT,UACXD,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACTC,MAAOxD,EACPyD,KAAK,OACL3B,GAAG,YACH4B,YAAY,8EACZC,SAAU,SAACC,GACT3D,EAAQ2D,EAAEC,OAAOL,MACnB,UAINV,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,OAAML,SAAA,EACpBD,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAACC,QAAQ,YAAYF,UAAU,0BAAyBL,SAAC,wBAGpED,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,GAAGT,UACXD,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACTC,MAAOpD,EACPqD,KAAK,OACL3B,GAAG,YACH4B,YAAY,oFACZC,SAAU,SAACC,GACTvD,EAAUuD,EAAEC,OAAOL,MACrB,UAINV,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,OAAML,SAAA,EACpBD,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAACC,QAAQ,YAAYF,UAAU,0BAAyBL,SAAC,8BAGpED,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,GAAGT,UACXD,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACTC,MAAOhD,EACPiD,KAAK,OACL3B,GAAG,YACH4B,YAAY,4GACZC,SAAU,SAACC,GACTnD,EAAYmD,EAAEC,OAAOL,MACvB,UAINV,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAACC,UAAU,OAAML,SAAA,EACpBD,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CAACC,QAAQ,YAAYF,UAAU,0BAAyBL,SAAC,wBAGpED,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAI,GAAGT,UACXD,EAAAA,EAAAA,KAACW,EAAAA,GAAU,CACTC,MAAO5C,EACP6C,KAAK,OACL3B,GAAG,YACH4B,YAAY,oFACZC,SAAU,SAACC,GACT/C,EAAS+C,EAAEC,OAAOL,MACpB,UAINZ,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACL,KAAK,SAASM,QAAS9C,EAAkB4B,SAAC,iCAM3D,C","sources":["views/ticketregistration/TicketRegistration.js"],"sourcesContent":["/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CFormText,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst TicketRegistration = () => {\n  const now = new Date()\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n\n  const utcNow = now.getTime() + now.getTimezoneOffset() * 60 * 1000 // 현재 시간을 utc로 변환한 밀리세컨드값\n  const koreaTimeDiff = 9 * 60 * 60 * 1000 // 한국 시간은 UTC보다 9시간 빠름(9시간의 밀리세컨드 표현)\n  const koreaNow = new Date(utcNow + koreaTimeDiff) // utc로 변환된 값을 한국 시간으로 변환시키기 위해 9시간(밀리세컨드)를 더함\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [name, setName] = useState('')\n  const [userId, setUserId] = useState('')\n  const [phoneNum, setPhoneNum] = useState('')\n  const [point, setPoint] = useState('')\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n  }, [])\n\n  const pointRegistration = async () => {\n    setLoading(true)\n\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n      const response = await axios\n        .patch(\n          `${IP}/users/point`,\n          {\n            name: name,\n            phoneNumber: phoneNum,\n            point: point,\n            id: userId,\n          },\n          {\n            headers: {\n              'x-access-token': jwt,\n            },\n          },\n        )\n        .then((response) => {\n          if (response.data.code === 1000) {\n            alert(`${name} 포인트 등록 완료`)\n            setName('')\n            setUserId('')\n            setPhoneNum('')\n            setPoint('')\n          } else if (response.data.code === 2023) {\n            alert(`존재하지 않는 유저입니다.`)\n            setName('')\n            setUserId('')\n            setPhoneNum('')\n            setPoint('')\n          } else if (response.data.code === 2002) {\n            alert(`아이디의 길이를 확인해주세요.`)\n            setUserId('')\n          } else if (response.data.code === 2022) {\n            alert(`포인트는 0보다 큰 값을 입력해주세요.`)\n            setPoint('')\n          } else if (response.data.code === 2021) {\n            alert(`포인트를 입력해주세요.`)\n            setPoint('')\n          }\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key !== 'Enter') {\n    }\n  }\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>포인트 등록 및 수정</strong>\n        </CCardHeader>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            이름\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={name}\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"가입한 이름을 입력해주세요.\"\n              onChange={(e) => {\n                setName(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            아이디\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={userId}\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"가입한 아이디를 입력해주세요.\"\n              onChange={(e) => {\n                setUserId(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            전화번호\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={phoneNum}\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"전화번호를 010xxxxxxxx 형식으로 입력해주세요.\"\n              onChange={(e) => {\n                setPhoneNum(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            포인트\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={point}\n              type=\"text\"\n              id=\"inputMenu\"\n              placeholder=\"등록할 포인트를 입력해주세요.\"\n              onChange={(e) => {\n                setPoint(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CButton type=\"submit\" onClick={pointRegistration}>\n          등록하기\n        </CButton>\n      </CForm>\n    </div>\n  )\n}\n\nexport default TicketRegistration\n"],"names":["now","Date","_useRecoilState","useRecoilState","severURLRecoilState","_useRecoilState2","_slicedToArray","IP","_useRecoilState3","jwtRecoilState","_useRecoilState4","jwt","setJwt","utcNow","getTime","getTimezoneOffset","_useState","useState","_useState2","setLoading","_useState3","_useState4","setError","_useState5","_useState6","name","setName","_useState7","_useState8","userId","setUserId","_useState9","_useState10","phoneNum","setPhoneNum","_useState11","_useState12","point","setPoint","useEffect","localStorage","getItem","pointRegistration","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","concat","phoneNumber","id","headers","then","response","data","code","alert","catch","error","sent","t0","stop","apply","arguments","_jsx","children","_jsxs","CForm","CCardHeader","CRow","className","CFormLabel","htmlFor","CCol","sm","CFormInput","value","type","placeholder","onChange","e","target","CButton","onClick"],"sourceRoot":""}