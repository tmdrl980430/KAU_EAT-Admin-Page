{"version":3,"file":"static/js/897.b158e083.chunk.js","mappings":"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","sources":["views/soldOut/SoldOutManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { CButton, CForm, CFormLabel, CRow } from '@coreui/react'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\nimport axios from 'axios'\nimport Select from 'react-select'\nimport { configs } from 'eslint-plugin-prettier'\n\nconst SoldOutManagement = () => {\n  const now = new Date()\n\n  const utcNow = now.getTime() + now.getTimezoneOffset() * 60 * 1000 // 현재 시간을 utc로 변환한 밀리세컨드값\n  const koreaTimeDiff = 9 * 60 * 60 * 1000 // 한국 시간은 UTC보다 9시간 빠름(9시간의 밀리세컨드 표현)\n  const koreaNow = new Date(utcNow + koreaTimeDiff) // utc로 변환된 값을 한국 시간으로 변환시키기 위해 9시간(밀리세컨드)를 더함\n\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n\n  const [choice, setChoice] = useState(0)\n\n  const onChange = (value) => {}\n\n  const options = [\n    { value: 'ACTIVE', label: '정상 운영' },\n    { value: 'SOLDOUT', label: '품절' },\n  ]\n  const [breakfastMenuStatus, setBreakfastMenuStatus] = useState('ACTIVE')\n  const [lunchMenuStatus, setLunchMenuStatus] = useState('ACTIVE')\n  const [lunchKoreaMenuStatus, setLunchKoreaMenuStatus] = useState('ACTIVE')\n  const [dinnerMenuStatus, setDinnerMenuStatus] = useState('ACTIVE')\n  const [lunchNoodleMenuStatus, setLunchNoodleMenuStatus] = useState('ACTIVE')\n  const [ramenMenuStatus, setRamenMenuStatus] = useState('ACTIVE')\n  const [kimbabMenuStatus, setkimbabMenuStatus] = useState('ACTIVE')\n  const [hotdogMenuStatus, setHotdogMenuStatus] = useState('ACTIVE')\n  const [chickenMenuStatus, setChickenMenuStatus] = useState('ACTIVE')\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n    if (jwt !== '') {\n      getDateMealTable()\n    }\n  }, [])\n\n  const getDateMealTable = async () => {\n    setLoading(true)\n\n    if (today != '') {\n      try {\n        setError(null)\n        setLoading(true)\n\n        const response = await axios\n          .get(`${IP}/menus?date=${today}`, {\n            headers: {\n              'x-access-token': jwt,\n            },\n          })\n          .then((response) => {\n            if (response.data.code === 1000) {\n              for (let i = 0; i < response.data.result.menus.length; i++) {\n                if (response.data.result.menus[i].mealTypeIdx === 1) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setBreakfastMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 2) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setLunchMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 3) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setLunchKoreaMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 4) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setLunchNoodleMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 5) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setDinnerMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 6) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setRamenMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 7) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setkimbabMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 8) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setHotdogMenuStatus('SOLDOUT')\n                  }\n                } else if (response.data.result.menus[i].mealTypeIdx === 9) {\n                  if (response.data.result.menus[i].menuStatus === '품절') {\n                    setChickenMenuStatus('SOLDOUT')\n                  }\n                }\n              }\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const today =\n    String(koreaNow.getFullYear()) +\n    '-' +\n    String(koreaNow.getMonth() + 1).padStart(2, '0') +\n    '-' +\n    String(koreaNow.getDate()).padStart(2, '0')\n\n  const patchSoldOut = async () => {\n    setLoading(true)\n    try {\n      // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n      setError(null)\n      // loading 상태를 true 로 바꿉니다.\n      setLoading(true)\n\n      const response = await axios\n        .patch(\n          `${IP}/menus/menu-status`,\n          {\n            date: today,\n            mealTypeAndStatus: [\n              {\n                mealTypeIdx: 1,\n                menuStatus: breakfastMenuStatus,\n              },\n              {\n                mealTypeIdx: 2,\n                menuStatus: lunchMenuStatus,\n              },\n              {\n                mealTypeIdx: 3,\n                menuStatus: lunchKoreaMenuStatus,\n              },\n              {\n                mealTypeIdx: 4,\n                menuStatus: lunchNoodleMenuStatus,\n              },\n              {\n                mealTypeIdx: 5,\n                menuStatus: dinnerMenuStatus,\n              },\n              {\n                mealTypeIdx: 6,\n                menuStatus: ramenMenuStatus,\n              },\n              {\n                mealTypeIdx: 7,\n                menuStatus: kimbabMenuStatus,\n              },\n              {\n                mealTypeIdx: 8,\n                menuStatus: hotdogMenuStatus,\n              },\n              {\n                mealTypeIdx: 9,\n                menuStatus: chickenMenuStatus,\n              },\n            ],\n          },\n          {\n            headers: {\n              'x-access-token': jwt,\n            },\n          },\n        )\n        .then((response) => {\n          if (response.data.code === 1000) {\n            alert('등록되었습니다.')\n          }\n          getDateMealTable()\n        })\n        .catch((error) => {})\n    } catch (e) {\n      setError(e)\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  return (\n    <>\n      <CForm>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            {today}\n          </CFormLabel>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            조식\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === breakfastMenuStatus\n            })}\n            defaultValue={breakfastMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setBreakfastMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 일품\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === lunchMenuStatus\n            })}\n            defaultValue={lunchMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setLunchMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 한식\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === lunchKoreaMenuStatus\n            })}\n            defaultValue={lunchKoreaMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setLunchKoreaMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식(면)\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === lunchNoodleMenuStatus\n            })}\n            defaultValue={lunchNoodleMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setLunchNoodleMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            석식\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === dinnerMenuStatus\n            })}\n            defaultValue={dinnerMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setDinnerMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            라면\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === ramenMenuStatus\n            })}\n            defaultValue={ramenMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setRamenMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            김밥\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === kimbabMenuStatus\n            })}\n            defaultValue={kimbabMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setkimbabMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            핫도그\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === hotdogMenuStatus\n            })}\n            defaultValue={hotdogMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setHotdogMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            치킨\n          </CFormLabel>\n          <Select\n            styles={{\n              // zIndex\n              menu: (provided) => ({ ...provided, zIndex: 999 }),\n            }}\n            value={options.find((op) => {\n              // choice state에 따라 디폴트 option 세팅\n              return op.value === chickenMenuStatus\n            })}\n            defaultValue={chickenMenuStatus}\n            onChange={(value) => {\n              onChange(value.value)\n              setChickenMenuStatus(value.value)\n            }}\n            options={options}\n          />\n        </CRow>\n        <CButton type=\"submit\" onClick={patchSoldOut}>\n          등록하기\n        </CButton>\n      </CForm>\n    </>\n  )\n}\n\nexport default SoldOutManagement\n"],"names":["now","Date","utcNow","getTime","getTimezoneOffset","koreaNow","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setError","_useRecoilState","useRecoilState","severURLRecoilState","_useRecoilState2","IP","_useRecoilState3","jwtRecoilState","_useRecoilState4","jwt","setJwt","_useState5","_useState6","options","value","label","_useState7","_useState8","breakfastMenuStatus","setBreakfastMenuStatus","_useState9","_useState10","lunchMenuStatus","setLunchMenuStatus","_useState11","_useState12","lunchKoreaMenuStatus","setLunchKoreaMenuStatus","_useState13","_useState14","dinnerMenuStatus","setDinnerMenuStatus","_useState15","_useState16","lunchNoodleMenuStatus","setLunchNoodleMenuStatus","_useState17","_useState18","ramenMenuStatus","setRamenMenuStatus","_useState19","_useState20","kimbabMenuStatus","setkimbabMenuStatus","_useState21","_useState22","hotdogMenuStatus","setHotdogMenuStatus","_useState23","_useState24","chickenMenuStatus","setChickenMenuStatus","useEffect","localStorage","getItem","getDateMealTable","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","today","axios","concat","headers","then","response","data","code","i","result","menus","length","mealTypeIdx","menuStatus","catch","error","sent","t0","stop","apply","arguments","String","getFullYear","getMonth","padStart","getDate","patchSoldOut","_ref2","_callee2","_context2","date","mealTypeAndStatus","alert","_jsx","_Fragment","children","_jsxs","CForm","CRow","className","CFormLabel","htmlFor","Select","styles","menu","provided","_objectSpread","zIndex","find","op","defaultValue","onChange","CButton","type","onClick"],"sourceRoot":""}