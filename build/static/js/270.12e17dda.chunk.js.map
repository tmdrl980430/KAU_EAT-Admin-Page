{"version":3,"file":"static/js/270.12e17dda.chunk.js","mappings":"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","sources":["views/mealTable/MealTable.js"],"sourcesContent":["/* eslint-disable react/jsx-no-undef */\nimport React, { useEffect, useState } from 'react'\nimport {\n  CButton,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CRow,\n  CFormText,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useRecoilState } from 'recoil'\nimport { jwtRecoilState, severURLRecoilState } from 'src/recoil'\n\nconst MealTable = () => {\n  const now = new Date()\n  const [IP, setIP] = useRecoilState(severURLRecoilState)\n  const [jwt, setJwt] = useRecoilState(jwtRecoilState)\n\n  const utcNow = now.getTime() + now.getTimezoneOffset() * 60 * 1000 // 현재 시간을 utc로 변환한 밀리세컨드값\n  const koreaTimeDiff = 9 * 60 * 60 * 1000 // 한국 시간은 UTC보다 9시간 빠름(9시간의 밀리세컨드 표현)\n  const koreaNow = new Date(utcNow + koreaTimeDiff) // utc로 변환된 값을 한국 시간으로 변환시키기 위해 9시간(밀리세컨드)를 더함\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const [date, setDate] = useState('')\n  const [breakfastMenu, setBreakfastMenu] = useState('')\n  const [lunchMenu, setLunchMenu] = useState('')\n  const [lunchKoreaMenu, setLunchKoreaMenu] = useState('')\n  const [dinnerMenu, setDinnerMenu] = useState('')\n  const [lunchNoodleMenu, setLunchNoodleMenu] = useState('')\n  const [ramenMenu, setRamenMenu] = useState('')\n  const [kimbabMenu, setKimbabMenu] = useState('')\n  const [hotdogMenu, setHotdogMenu] = useState('')\n  const [chickenMenu, setChickenMenu] = useState('')\n  const [isMenu, setIsMenu] = useState(false)\n  const [dateClick, setDateClick] = useState(false)\n\n  const [breakfastMenuIdx, setBreakfastMenuIdx] = useState(0)\n  const [lunchMenuIdx, setLunchMenuIdx] = useState(0)\n  const [lunchKoreaMenuIdx, setLunchKoreaMenuIdx] = useState(0)\n  const [dinnerMenuIdx, setDinnerMenuIdx] = useState(0)\n  const [lunchNoodleMenuIdx, setLunchNoodleMenuIdx] = useState(0)\n  const [ramenMenuIdx, setRamenMenuIdx] = useState(0)\n  const [kimbabMenuIdx, setKimbabMenuIdx] = useState(0)\n  const [hotdogMenuIdx, setHotdogMenuIdx] = useState(0)\n  const [chickenMenuIdx, setChickenMenuIdx] = useState(0)\n\n  useEffect(() => {\n    setJwt(localStorage.getItem('jwt-token'))\n    setDate(today)\n  }, [])\n\n  const today =\n    String(koreaNow.getFullYear()) +\n    '-' +\n    String(koreaNow.getMonth() + 1).padStart(2, '0') +\n    '-' +\n    String(koreaNow.getDate()).padStart(2, '0')\n\n  const setDateMealTable = async () => {\n    setBreakfastMenu('')\n    setLunchMenu('')\n    setLunchKoreaMenu('')\n    setDinnerMenu('')\n    setLunchNoodleMenu('')\n    setRamenMenu('')\n    setKimbabMenu('')\n    setHotdogMenu('')\n    setChickenMenu('')\n    setLoading(true)\n\n    if (date != '') {\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null)\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true)\n\n        const response = await axios\n          .get(`${IP}/menus?date=${date}`, {\n            headers: {\n              'x-access-token': jwt,\n            },\n          })\n          .then((response) => {\n            if (response.data.code === 1000) {\n              if (response.data.result.menus.length == 0) {\n                setIsMenu(false)\n                setBreakfastMenuIdx(0)\n                setLunchMenuIdx(0)\n                setLunchKoreaMenuIdx(0)\n                setDinnerMenuIdx(0)\n                setLunchNoodleMenuIdx(0)\n                setRamenMenuIdx(0)\n                setKimbabMenuIdx(0)\n                setHotdogMenuIdx(0)\n                setChickenMenuIdx(0)\n              } else {\n                setIsMenu(true)\n                for (let i = 0; i < response.data.result.menus.length; i++) {\n                  if (response.data.result.menus[i].mealTypeIdx === 1) {\n                    setBreakfastMenu(response.data.result.menus[i].name)\n                    setBreakfastMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 2) {\n                    setLunchMenu(response.data.result.menus[i].name)\n                    setLunchMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 3) {\n                    setLunchKoreaMenu(response.data.result.menus[i].name)\n                    setLunchKoreaMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 5) {\n                    setDinnerMenu(response.data.result.menus[i].name)\n                    setDinnerMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 4) {\n                    setLunchNoodleMenu(response.data.result.menus[i].name)\n                    setLunchNoodleMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 6) {\n                    setRamenMenu(response.data.result.menus[i].name)\n                    setRamenMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 7) {\n                    setKimbabMenu(response.data.result.menus[i].name)\n                    setKimbabMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 8) {\n                    setHotdogMenu(response.data.result.menus[i].name)\n                    setHotdogMenuIdx(response.data.result.menus[i].menuIdx)\n                  } else if (response.data.result.menus[i].mealTypeIdx === 9) {\n                    setChickenMenu(response.data.result.menus[i].name)\n                    setChickenMenuIdx(response.data.result.menus[i].menuIdx)\n                  }\n                }\n              }\n            } else {\n              alert(response.data.message)\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  const mealTableRegistration = async () => {\n    setLoading(true)\n\n    let registrationList = []\n    if (date != '') {\n      if (breakfastMenu !== null) {\n        registrationList.push({ mealTypeIdx: 1, name: breakfastMenu })\n      }\n      if (lunchMenu !== null) {\n        registrationList.push({ mealTypeIdx: 2, name: lunchMenu })\n      }\n      if (lunchKoreaMenu !== null) {\n        registrationList.push({ mealTypeIdx: 3, name: lunchKoreaMenu })\n      }\n      if (dinnerMenu !== null) {\n        registrationList.push({ mealTypeIdx: 5, name: dinnerMenu })\n      }\n      if (lunchNoodleMenu !== null) {\n        registrationList.push({ mealTypeIdx: 4, name: lunchNoodleMenu })\n      }\n      if (ramenMenu !== null) {\n        registrationList.push({ mealTypeIdx: 6, name: ramenMenu })\n      }\n      if (kimbabMenu !== null) {\n        registrationList.push({ mealTypeIdx: 7, name: kimbabMenu })\n      }\n      if (hotdogMenu !== null) {\n        registrationList.push({ mealTypeIdx: 8, name: hotdogMenu })\n      }\n      if (chickenMenu !== null) {\n        registrationList.push({ mealTypeIdx: 9, name: chickenMenu })\n      }\n      try {\n        // 요청이 시작 할 때에는 error 와 users 를 초기화하고\n        setError(null)\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true)\n\n        // axios     .defaults     .headers     .common['x-access-token'] = jwt\n\n        const response = await axios\n          .post(\n            `${IP}/menus`,\n            {\n              availableAt: date,\n              menus: registrationList,\n            },\n            {\n              headers: {\n                'x-access-token': jwt,\n              },\n            },\n          )\n          .then((response) => {\n            if (response.data.code === 1000) {\n              alert(`${date} 식단이 등록 되었습니다.`)\n            } else {\n              alert(response.data.message)\n            }\n          })\n          .catch((error) => {})\n      } catch (e) {\n        setError(e)\n      }\n    }\n    setLoading(false)\n    // loading 끄기\n  }\n\n  return (\n    <div>\n      <CForm>\n        <CCardHeader>\n          <strong>날짜 등록하기</strong>\n        </CCardHeader>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputDate\" className=\"col-sm-2 col-form-label\">\n            날짜\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={date}\n              type=\"text\"\n              id=\"inputDate\"\n              placeholder=\"날짜를 2022-09-15 형식으로 입력해주세요.\"\n              onChange={(e) => {\n                setDate(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CButton type=\"button\" onClick={setDateMealTable} color=\"dark\">\n          날짜 조회하기\n        </CButton>\n        <CCardHeader>\n          <strong>메뉴 등록하기</strong>{' '}\n        </CCardHeader>\n        <small>밥, 스파게티, 국, 김치 형식으로 입력해주세요.</small>\n        <small>운영을 하지 않을때는 빈칸으로 입력해주세요.</small>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            조식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={breakfastMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setBreakfastMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 일품\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식 | 한식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchKoreaMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchKoreaMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            중식(면)\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={lunchNoodleMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setLunchNoodleMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            석식\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={dinnerMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setDinnerMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            라면\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={ramenMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setRamenMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            김밥\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={kimbabMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setKimbabMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            핫도그\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={hotdogMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setHotdogMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n          <CFormLabel htmlFor=\"inputMenu\" className=\"col-sm-2 col-form-label\">\n            치킨\n          </CFormLabel>\n          <CCol sm={10}>\n            <CFormInput\n              value={chickenMenu}\n              type=\"text\"\n              id=\"inputMenu\"\n              onChange={(e) => {\n                setChickenMenu(e.target.value)\n              }}\n            />\n          </CCol>\n        </CRow>\n        {isMenu ? (\n          <CButton type=\"button\" onClick={mealTableRegistration}>\n            수정하기\n          </CButton>\n        ) : (\n          <CButton type=\"button\" onClick={mealTableRegistration}>\n            등록하기\n          </CButton>\n        )}\n      </CForm>\n    </div>\n  )\n}\n\nexport default MealTable\n"],"names":["now","Date","_useRecoilState","useRecoilState","severURLRecoilState","_useRecoilState2","_slicedToArray","IP","_useRecoilState3","jwtRecoilState","_useRecoilState4","jwt","setJwt","utcNow","getTime","getTimezoneOffset","koreaNow","_useState","useState","_useState2","setLoading","_useState3","_useState4","setError","_useState5","_useState6","date","setDate","_useState7","_useState8","breakfastMenu","setBreakfastMenu","_useState9","_useState10","lunchMenu","setLunchMenu","_useState11","_useState12","lunchKoreaMenu","setLunchKoreaMenu","_useState13","_useState14","dinnerMenu","setDinnerMenu","_useState15","_useState16","lunchNoodleMenu","setLunchNoodleMenu","_useState17","_useState18","ramenMenu","setRamenMenu","_useState19","_useState20","kimbabMenu","setKimbabMenu","_useState21","_useState22","hotdogMenu","setHotdogMenu","_useState23","_useState24","chickenMenu","setChickenMenu","_useState25","_useState26","isMenu","setIsMenu","_useState27","_useState28","_useState29","_useState30","setBreakfastMenuIdx","_useState31","_useState32","setLunchMenuIdx","_useState33","_useState34","setLunchKoreaMenuIdx","_useState35","_useState36","setDinnerMenuIdx","_useState37","_useState38","setLunchNoodleMenuIdx","_useState39","_useState40","setRamenMenuIdx","_useState41","_useState42","setKimbabMenuIdx","_useState43","_useState44","setHotdogMenuIdx","_useState45","_useState46","setChickenMenuIdx","useEffect","localStorage","getItem","today","String","getFullYear","getMonth","padStart","getDate","setDateMealTable","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","concat","headers","then","response","data","code","result","menus","length","i","mealTypeIdx","name","menuIdx","alert","message","catch","error","sent","t0","stop","apply","arguments","mealTableRegistration","_ref2","_callee2","registrationList","_context2","push","availableAt","_jsx","children","_jsxs","CForm","CCardHeader","CRow","className","CFormLabel","htmlFor","CCol","sm","CFormInput","value","type","id","placeholder","onChange","e","target","CButton","onClick","color"],"sourceRoot":""}